enableFeaturePreview('VERSION_CATALOGS')

include "trader-common"
include "trader-common-services"
include "trader-services"
include "trader-broker"
include "plugin-jctp-6.3.19-p1-linux_x64"
include "plugin-jctp-6.3.19-p1-win32_x64"
include	"plugin-jctp-6.5.1-20200908-linux_x64"
include	"plugin-jctp-6.5.1-20200908-win32_x64"
include	"plugin-jctp-6.5.1-20200904-linux_x64"
include	"plugin-jctp-6.5.1-20200904-win32_x64"

rootProject.name = 'trader-modules'

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            version('groovy', '4.0.12')
            version('slf4j', '2.0.7')
            version('jackson', '2.15.1')
            version('netty', '4.1.93.Final')
            version('log4j', '2.20.0')
            alias('log4j-api').to('org.apache.logging.log4j', 'log4j-api').versionRef('log4j')
            alias('log4j-to-slf4j').to('org.apache.logging.log4j', 'log4j-to-slf4j').versionRef('log4j')
            alias('slf4j-api').to('org.slf4j', 'slf4j-api').versionRef('slf4j')
            alias('jackson-databind').to('com.fasterxml.jackson.core', 'jackson-databind').versionRef('jackson')
            alias('groovy').to('org.apache.groovy', 'groovy').versionRef('groovy')
            alias('guava').to('com.google.guava', 'guava').version('31.1-jre')
            alias('gson').to('com.google.code.gson', 'gson').version('2.10.1')
            alias('jdom2').to('org.jdom', 'jdom2').version('2.0.6')
            alias('json-simple').to('com.googlecode.json-simple', 'json-simple').version('1.1.1')
            alias('commons-vfs2').to('org.apache.commons', 'commons-vfs2').version('2.9.0')
            alias('commons-lang3').to('org.apache.commons', 'commons-lang3').version('3.12.0')
            alias('commons-text').to('org.apache.commons', 'commons-text').version('1.9')
            alias('commons-compress').to('org.apache.commons', 'commons-compress').version('1.21')
            alias('commons-cli').to('commons-cli', 'commons-cli').version('1.5.0')
            alias('classgraph').to('io.github.classgraph', 'classgraph').version('4.8.160')
            alias('ta4j-core').to('org.ta4j', 'ta4j-core').version('0.15')
            alias('httpclient').to('org.apache.httpcomponents', 'httpclient').version('4.5.14')
            alias('httpmime').to('org.apache.httpcomponents', 'httpmime').version('4.5.14')
            alias('disruptor').to('com.lmax', 'disruptor').version('3.4.4')
            alias('jsoup').to('org.jsoup', 'jsoup').version('1.14.3')
            alias('univocity-parsers').to('com.univocity', 'univocity-parsers').version('2.9.1')
            alias('zip4j').to('net.lingala.zip4j', 'zip4j').version('2.11.5')
            alias('fastutil').to('it.unimi.dsi', 'fastutil').version('8.5.11')
            bundle('commonLibs', ['fastutil', 'zip4j', 'univocity-parsers', 'jsoup', 'disruptor', 'httpclient', 'httpmime', 'ta4j-core', 'classgraph', 'log4j-api', 'log4j-to-slf4j', 'groovy', 'guava', 'gson', 'commons-vfs2', 'commons-lang3', 'commons-text', 'commons-compress','commons-cli', 'jdom2'])

            version('spring', '6.0.9')
            version('springboot', '3.1.0')
            alias('jakarta.persistence-api').to('jakarta.persistence', 'jakarta.persistence-api').version('3.1.0')
            alias('jakarta.annotation-api').to('jakarta.annotation', 'jakarta.annotation-api').version('2.1.1')
            alias('spring-context').to('org.springframework', 'spring-context').versionRef('spring')
            alias('spring-web').to('org.springframework', 'spring-web').versionRef('spring')
            alias('spring-orm').to('org.springframework', 'spring-orm').versionRef('spring')
            alias('spring-jdbc').to('org.springframework', 'spring-jdbc').versionRef('spring')
            alias('spring-webmvc').to('org.springframework', 'spring-webmvc').versionRef('spring')
            alias('spring-websocket').to('org.springframework', 'spring-websocket').versionRef('spring')
            alias('spring-webflux').to('org.springframework', 'spring-webflux').versionRef('spring')
            alias('spring-data-jpa').to('org.springframework.data', 'spring-data-jpa').versionRef('springboot')
            alias('spring-boot').to('org.springframework.boot', 'spring-boot').versionRef('springboot')
            alias('spring-boot-starter').to('org.springframework.boot', 'spring-boot-starter').versionRef('springboot')
            alias('spring-boot-starter-json').to('org.springframework.boot', 'spring-boot-starter-json').versionRef('springboot')
            alias('spring-boot-starter-undertow').to('org.springframework.boot', 'spring-boot-starter-undertow').versionRef('springboot')
            alias('spring-instrument').to('org.springframework', 'spring-instrument').versionRef('spring')
            alias('mysql-connector-java').to('mysql', 'mysql-connector-java').version('8.0.27')
            alias('druid').to('com.alibaba', 'druid').version('1.2.15')
            alias('hikaricp').to('com.zaxxer', 'HikariCP').version('5.0.1')
            alias('okhttp').to('com.squareup.okhttp3', 'okhttp').version('4.9.3')
            alias('h2').to('com.h2database', 'h2').version('2.1.214')
            bundle('springLibs', ['druid', 'okhttp', 'h2', 'hikaricp', 'mysql-connector-java', 'jakarta.persistence-api', 'jakarta.annotation-api', 'spring-context', 'spring-web', 'spring-orm', 'spring-data-jpa', 'spring-jdbc', 'spring-webmvc', 'spring-websocket', 'spring-webflux','spring-boot', 'spring-boot-starter', 'spring-boot-starter-json', 'spring-boot-starter-undertow','spring-instrument'])
        }
    }
}
