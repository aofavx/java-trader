

buildscript {
    ext {
        springVersion = '5.2.7.RELEASE'
        springBootVersion = '2.3.1.RELEASE'
        jettyVersion = '9.4.29.v20200521'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath(
        "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {
    apply plugin: "eclipse"
    apply plugin: 'java'
    apply plugin: "maven"

    group = 'trader'
    version = '1.0.0'
    ext {
        jtraderCommonVersion = '1.0.0.0-20190528'
        jctpLinuxVersion = '6.3.15_20190220-linux_x64' //'6.3.11-20180109-linux_x64', '6.3.13_20181119-linux_x64', '6.3.15_20190220-linux_x64'

        gsonVersion = '2.8.6'
        guavaVersion = '29.0-jre'
        juntVersion = '4.13'
        mysqlVersion = '8.0.19'
        ta4jVersion = '0.13'
        commonsTextVersion = '1.8'
        commonsCliVersion = '1.4'
        commonsVFSVersion = '2.6.0'
        jsoupVersion = '1.12.1'
        httpcomponentVersion = '4.5.12'
        jdom2Verson = '2.0.6'
        slf4jVersion = '1.7.30'
        fastUtilVersion = '8.3.1'
        rocksdbVersion = '6.8.1'
        classgraphVersion = '4.8.87'
        disruptorVersion = '3.4.2'
        groovyVersion = '3.0.4'
        swaggerVersion = '2.9.2'
        h2Version = '1.4.200'
        sqliteVersion = '3.31.1'
        zip4jVersion = '2.5.2'
    }
    ext.gitRevision = "git rev-parse --short HEAD".execute().text.trim()

    sourceCompatibility = 11
    targetCompatibility = 11

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    jar {
        manifest {
            attributes(
                "Implementation-Title": project.group+"."+archivesBaseName,
                "Implementation-Version": project.version,
                'Built-Time': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Git-Revision': gitRevision
                )
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    //Export all classpath entries
    eclipse {
        classpath {
            downloadSources=true
            file {
                withXml {
                    xml -> xml.asNode().classpathentry.findAll{
                        it.@kind == 'lib' || it.@kind == 'src'
                    }.each{
                        it.@exported = 'true'
                    }
                }
            }
        }
    }
}

ext{
    traderHome = System.getenv('TRADER_HOME')
}

task localDeploy() {

    dependsOn ':plugin-jctp-6.3.13-linux_x64:localDeploy'
    dependsOn ':plugin-jctp-6.3.13-win32_x64:localDeploy'
    dependsOn ':plugin-jctp-6.3.13-win32_x86:localDeploy'
    dependsOn ':plugin-jctp-6.3.15-linux_x64:localDeploy'
    dependsOn ':plugin-jctp-6.3.15-win32_x64:localDeploy'
    dependsOn ':plugin-jctp-6.3.15-win32_x86:localDeploy'
    dependsOn ':trader-services:localDeploy'

}
